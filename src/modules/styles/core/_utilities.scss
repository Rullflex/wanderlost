ol.counter {
    list-style-type: none;
    counter-reset: item;

    li {
        &::before {
            counter-increment: item;
            content: counter(item);
        }
    }
}

.ellipsis {
    display: block;
    overflow: hidden;
    width: 100%;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.es {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.table {
    display: table;
    width: 100%;
    //table-layout: fixed;
}

.trow {
    display: table-row;
}

.cell {
    display: table-cell;

    &.full {
        width: 100%;
    }
}

.ibg {
    position: relative;
    overflow: hidden;

    img {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        object-fit: cover;
    }
}

body.ie {
    .ibg {
        background-position: center;
        background-size: cover;
        background-repeat: no-repeat;
    }

    .ibg img {
        width: 0;
        height: 0;
        opacity: 0;
        visibility: hidden;
    }
}

.video {
    position: relative;
    overflow: hidden;
    height: 0;
    padding-bottom: 56.25%;

    video,
    iframe,
    object,
    embed {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
}

.videobg {
    video,
    iframe,
    object,
    embed {
        position: fixed;
        top: 50%;
        left: 50%;
        min-width: 100%;
        min-height: 100%;
        width: auto;
        height: auto;
        z-index: -100;
        transform: translateX(-50%) translateY(-50%);
        background-size: cover;
    }
}

.moretext {
    overflow: hidden;
}

.moretext__more {
    cursor: pointer;

    span {
        font-style: normal;

        &:first-child {
            display: block;
        }

        &:last-child {
            display: none;
        }
    }

    &.active {
        span {
            font-style: normal;

            &:first-child {
                display: none;
            }

            &:last-child {
                display: block;
            }
        }
    }
}

// bootstrap utilites

//
// Utilities for common `display` values
//
@if $enable-display-utilites {
    @each $breakpoint in map-keys($grid-breakpoints) {
        @include media-breakpoint-up($breakpoint) {
            $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        @each $value in $displays {
            .d#{$infix}-#{$value} { display: $value !important; }
        }
    }
    }


    //
    // Utilities for toggling `display` in print
    //

    //   @media print {
    //     @each $value in $displays {
    //       .d-print-#{$value} { display: $value !important; }
    //     }
    //   }
}
//
// Utilities for common `position` values
//
@if $enable-position-utilites {
    @each $breakpoint in map-keys($grid-breakpoints) {

        @include media-breakpoint-up($breakpoint) {
            $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

            @each $value in $positions {
                .pos#{$infix}-#{$value} {
                    position: $value !important;
                }
            }
        }
    }
}


// Credit: Nicolas Gallagher and SUIT CSS.

.embed-responsive {
    position: relative;
    display: block;
    width: 100%;
    padding: 0;
    overflow: hidden;
  
    &::before {
        display: block;
        content: "";
    }

    .embed-responsive-item,
    iframe,
    embed,
    object,
    video {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border: 0;
    }
}

@each $embed-responsive-aspect-ratio in $embed-responsive-aspect-ratios {
    $embed-responsive-aspect-ratio-x: nth($embed-responsive-aspect-ratio, 1);
    $embed-responsive-aspect-ratio-y: nth($embed-responsive-aspect-ratio, 2);

    .embed-responsive-#{$embed-responsive-aspect-ratio-x}by#{$embed-responsive-aspect-ratio-y} {
        &::before {
            padding-top: percentage($embed-responsive-aspect-ratio-y / $embed-responsive-aspect-ratio-x);
        }
    }
}

.clearfix {
    &::after {
        display: block;
        clear: both;
        content: "";
    }
}

.img-fluid {
    // Part 1: Set a maximum relative to the parent
    max-width: 100%;
    // Part 2: Override the height to auto, otherwise images will be stretched
    // when setting a width and height attribute on the img element.
    height: auto;
}

.stretched-link {
    &::after {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 1;
        // Just in case `pointer-events: none` is set on a parent
        pointer-events: auto;
        content: "";
        // IE10 bugfix, see https://stackoverflow.com/questions/16947967/ie10-hover-pseudo-class-doesnt-work-without-background-color
        background-color: rgba(0, 0, 0, 0);
    }
}

.lazymin {
    filter: blur(10px);
    &.lazyloaded {
        filter: unset;
    }
}

.visible {
    visibility: visible;
}

.invisible {
    visibility: hidden;
}

.text-red {
    color: $red;
}

.text-dark {
    color: $dark;
}

.text-muted {
    color: $muted;
}

.text-center {
    text-align: center;
}

.text-left {
    text-align: left;
}

.hidden {
    display: none;
}

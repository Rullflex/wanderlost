::-webkit-input-placeholder {
    color: $placeholder;
    font-weight: normal;
}

::-moz-placeholder {
    color: $placeholder;
    font-weight: normal;
} /* Firefox 19+ */

:root {
    font-size: $font-size-root;

    @if $enable-smooth-scroll {

        @media (prefers-reduced-motion: no-preference) {
            scroll-behavior: smooth;
        }
    }
}


:-moz-placeholder {
    color: $placeholder;
    font-weight: normal;
} /* Firefox 18- */
:-ms-input-placeholder {
    color: $placeholder;
    font-weight: normal;
}

:focus::-webkit-input-placeholder {
    color: transparent;
}

:focus::-moz-placeholder {
    color: transparent;
}

:focus:-moz-placeholder {
    color: transparent;
}

:focus:-ms-input-placeholder {
    color: transparent;
}

html {
    @include aFontMob(16, 420);
}

@media (min-width: map-get($grid-breakpoints, md)) {
    html {
        font-size: 24px;
    }
}

@media (min-width: map-get($grid-breakpoints, lg)) {
    html {
        font-size: 16px;
    }
}

body {
    position: relative;
    padding: 0;
    margin: 0;

    overflow-x: hidden;
    backface-visibility: hidden;
    @include bg($body-bg);

    font-size: $font-size-base;
    font-family: $font-family-base;
    font-weight: $font-weight-base;
    line-height: $line-height-base;
    color: $body-color;
    text-align: $body-text-align;

    -webkit-text-size-adjust: 100%;
    -webkit-tap-highlight-color: rgba(black, 0);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    ::selection {
        //background: fade-out($colors__second, $fade * 3);
    }

    &.lock {
        overflow: hidden;
    }
}

.app-wrapper {
    width: 100%;
    min-height: 100%;
    overflow: hidden;
    &.loaded {}
}

input,
button,
select,
optgroup,
textarea {
    margin: 0;
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
}

button,
select {
    text-transform: none;
}


input [type="text"],
input [type="email"],
input [type="tel"],
textarea {
    appearance: none;
}

button {
    cursor: pointer;
    border-radius: 0;
}

a {
    text-decoration: none;
    color: inherit;
    &:disabled {
        cursor: not-allowed;
        pointer-events: none;
        opacity: $disabled-opacity;
    }
    &.link {

        color: $link-color;
        text-decoration: $link-decoration;
        transition: $transition--hover;
    
        &:hover {
            color: $link-hover-color;
            text-decoration: $link-hover-decoration;
        }
    }
}

// a:not([href]):not([class]) {
//     &,
//     &:hover {
//         color: inherit;
//         text-decoration: none;
//     }
// }
a:not([href]) {
    &,
    &:hover {
        color: inherit;
        text-decoration: none;
    }
}

button,
input,
textarea {
    outline: none;
    border: none;

    &:hover,
    &:active,
    &:focus {
        outline: none;
    }

    &:disabled {
        cursor: initial;
        pointer-events: none;
        opacity: $disabled-opacity;
    }
}


ul,
ol {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

.container,
section {
    position: relative;
}


// Bootstrap Reboot
//
// Normalization of HTML elements, manually forked from Normalize.css to remove
// styles targeting irrelevant browsers while applying new styles.
//
// Normalize is licensed MIT. https://github.com/necolas/normalize.css
//
// Некотороые значения изменены мною или удалены


*,
*::before,
*::after {
    box-sizing: border-box;
}


// Future-proof rule: in browsers that support :focus-visible, suppress the focus outline
// on elements that programmatically receive focus but wouldn't normally show a visible
// focus outline. In general, this would mean that the outline is only applied if the
// interaction that led to the element receiving programmatic focus was a keyboard interaction,
// or the browser has somehow determined that the user is primarily a keyboard user and/or
// wants focus outlines to always be presented.
// See https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible
// and https://developer.paciellogroup.com/blog/2018/03/focus-visible-and-backwards-compatibility/

[tabindex="-1"]:focus:not(:focus-visible) {
    outline: 0 !important;
}


hr {
    border: 0;
}


p, h1, h2, h3 ,h4, h5, h6 {
    margin: 0;
}


abbr[title] {
    border-bottom: none; /* 1 */
    text-decoration: underline; /* 2 */
    text-decoration: underline dotted; /* 2 */
}


// Address

address {
    margin-bottom: 1rem;
    font-style: normal;
    line-height: inherit;
}


// Blockquote

blockquote {
    margin: 0 0 1rem;
}


// Strong
//
// Add the correct font weight in Chrome, Edge, and Safari

b,
strong {
    font-weight: $font-weight-bolder;
}


// Small
//
// Add the correct font size in all browsers

small {
    font-size: $small-font-size;
}


// Sub and Sup
//
// Prevent `sub` and `sup` elements from affecting the line height in
// all browsers.

sub,
sup {
    position: relative;
    line-height: 0;
    vertical-align: baseline;
    font-size: $sub-sup-font-size;
}

sub {
    bottom: -0.25em;
}

sup {
    top: -0.5em;
}


pre,
code,
kbd,
samp {
    font-family: $font-family-code;
    font-size: 1em;
}

// 1. Remove browser default top margin
// 2. Reset browser default of `1em` to use `rem`s
// 3. Don't allow content to break outside

pre {
    display: block;
    margin-top: 0; // 1
    margin-bottom: 1rem; // 2
    overflow: auto; // 3
    font-size: $code-font-size;
    color: $pre-color;

    // Account for some code outputs that place code tags in pre tags
    code {
        font-size: inherit;
        color: inherit;
        word-break: normal;
    }
}


// Figures
//
// Apply a consistent margin strategy (matches our type styles).

figure {
    margin: 0 0 1rem;
}


// Images and content

img,
svg {
    vertical-align: middle;
    height: auto;
}


// Tables
//
// Prevent double borders

table {
    caption-side: bottom;
    border-collapse: collapse;
}

// 1. Removes font-weight bold by inheriting
// 2. Matches default `<td>` alignment by inheriting `text-align`.
// 3. Fix alignment for Safari

th {
    text-align: inherit; // 2
    text-align: -webkit-match-parent; // 3
}

thead,
tbody,
tfoot,
tr,
td,
th {
    border-color: inherit;
    border-style: solid;
    border-width: 0;
}


// Forms
//
// 1. Allow labels to use `margin` for spacing.

label {
    display: inline-block; // 1
}

// Remove the default `border-radius` that macOS Chrome adds.
// See https://github.com/twbs/bootstrap/issues/24093


// Set the cursor for non-`<button>` buttons
//
// Details at https://github.com/twbs/bootstrap/pull/30562
[role="button"] {
    cursor: pointer;
}

// Remove the inheritance of word-wrap in Safari.
// See https://github.com/twbs/bootstrap/issues/24990

select {
    word-wrap: normal;
}

// Remove the dropdown arrow in Chrome from inputs built with datalists.
// See https://stackoverflow.com/a/54997118

[list]::-webkit-calendar-picker-indicator {
    display: none;
}

// 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
//    controls in Android 4.
// 2. Correct the inability to style clickable types in iOS and Safari.
// 3. Opinionated: add "hand" cursor to non-disabled button elements.

button,
[type="button"], // 1
[type="reset"],
[type="submit"] {
    -webkit-appearance: button; // 2
}

// Remove inner border and padding from Firefox, but don't restore the outline like Normalize.

::-moz-focus-inner {
    padding: 0;
    border-style: none;
}

// 1. Textareas should really only resize vertically so they don't break their (horizontal) containers.
// 2. Но лучше когда вообще не изменяет размер

textarea {
    // resize: vertical; // 1
    resize: none; // 2
}


fieldset {
    min-width: 0;
    padding: 0;
    margin: 0;
    border: 0;
}


// Fix height of inputs with a type of datetime-local, date, month, week, or time
// See https://github.com/twbs/bootstrap/issues/18842

::-webkit-datetime-edit-fields-wrapper,
::-webkit-datetime-edit-text,
::-webkit-datetime-edit-minute,
::-webkit-datetime-edit-hour-field,
::-webkit-datetime-edit-day-field,
::-webkit-datetime-edit-month-field,
::-webkit-datetime-edit-year-field {
    padding: 0;
}

::-webkit-inner-spin-button {
    height: auto;
}

// 1. Correct the outline style in Safari.
// 2. This overrides the extra rounded corners on search inputs in iOS so that our
//    `.form-control` class can properly style them. Note that this cannot simply
//    be added to `.form-control` as it's not specific enough. For details, see
//    https://github.com/twbs/bootstrap/issues/11586.

[type="search"] {
    outline-offset: -2px; // 1
    -webkit-appearance: textfield; // 2
}

// Remove the inner padding in Chrome and Safari on macOS.

::-webkit-search-decoration {
    -webkit-appearance: none;
}

// Remove padding around color pickers in webkit browsers

::-webkit-color-swatch-wrapper {
    padding: 0;
}


// Inherit font family and line height for file input buttons

// stylelint-disable-next-line selector-pseudo-element-no-unknown
::file-selector-button {
    font: inherit;
}

// 1. Change font properties to `inherit`
// 2. Correct the inability to style clickable types in iOS and Safari.

::-webkit-file-upload-button {
    font: inherit; // 1
    -webkit-appearance: button; // 2
}

// Correct element displays

output {
    display: inline-block;
}

// Remove border from iframe

iframe {
    border: 0;
}

// Summary
//
// 1. Add the correct display in all browsers

summary {
    display: list-item; // 1
    cursor: pointer;
}


// Progress
//
// Add the correct vertical alignment in Chrome, Firefox, and Opera.

progress {
    vertical-align: baseline;
}


// Hidden attribute
//
// Always hide an element with the `hidden` HTML attribute.

[hidden] {
    display: none !important;
}
